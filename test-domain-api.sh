#!/bin/bash

echo "üåê Testing Domain API Configuration..."
echo "====================================="

echo ""
echo "üìã Step 1: Checking API Configuration..."
echo "---------------------------------------"

# Check if API config uses domain for production
if grep -q "Production mode: Using domain API" "frontend/src/config/api.js"; then
    echo "‚úÖ API config uses domain for production"
else
    echo "‚ùå API config does not use domain for production"
fi

# Check if API config uses localhost for development
if grep -q "Development mode: Using localhost API" "frontend/src/config/api.js"; then
    echo "‚úÖ API config uses localhost for development"
else
    echo "‚ùå API config does not use localhost for development"
fi

echo ""
echo "üìã Step 2: Expected Behavior..."
echo "-----------------------------"

echo "‚úÖ Development Environment:"
echo "  ‚Ä¢ localhost:8080 ‚Üí http://localhost:7700/api"
echo "  ‚Ä¢ 127.0.0.1:8080 ‚Üí http://localhost:7700/api"
echo "  ‚Ä¢ Any local port ‚Üí http://localhost:7700/api"
echo ""
echo "‚úÖ Production Environment:"
echo "  ‚Ä¢ bidalbania.al ‚Üí https://bidalbania.al/api"
echo "  ‚Ä¢ www.bidalbania.al ‚Üí https://bidalbania.al/api"
echo "  ‚Ä¢ Any domain access ‚Üí https://bidalbania.al/api"

echo ""
echo "üìã Step 3: Testing Instructions..."
echo "--------------------------------"

echo "üîß Development Testing:"
echo ""
echo "1. Start backend: cd backend && npm start"
echo "2. Start frontend: cd frontend && npm run dev"
echo "3. Open browser: http://localhost:8080"
echo "4. Check console for: 'üîß Development mode: Using localhost API'"
echo "5. Check Network tab for: http://localhost:7700/api calls"
echo ""
echo "üîß Production Testing:"
echo ""
echo "1. Deploy to server: ./deploy-nginx-ssl-fix.sh"
echo "2. Open browser: https://bidalbania.al"
echo "3. Check console for: 'üöÄ Production mode: Using domain API'"
echo "4. Check Network tab for: https://bidalbania.al/api calls"

echo ""
echo "üìã Step 4: Console Messages..."
echo "----------------------------"

echo "‚úÖ Expected Development Messages:"
echo "  ‚Ä¢ 'üîß Development mode: Using localhost API'"
echo "  ‚Ä¢ 'API URL configured as: http://localhost:7700/api'"
echo "  ‚Ä¢ 'CSP: Skipping HTTPS upgrade for local/development'"
echo ""
echo "‚úÖ Expected Production Messages:"
echo "  ‚Ä¢ 'üöÄ Production mode: Using domain API'"
echo "  ‚Ä¢ 'API URL configured as: https://bidalbania.al/api'"
echo "  ‚Ä¢ No CSP interference with domain API"

echo ""
echo "üìã Step 5: Network Tab Check..."
echo "-----------------------------"

echo "‚úÖ Development Network Requests:"
echo "  ‚Ä¢ API calls should show: http://localhost:7700/api"
echo "  ‚Ä¢ Status should be 200 (success)"
echo "  ‚Ä¢ No SSL errors"
echo ""
echo "‚úÖ Production Network Requests:"
echo "  ‚Ä¢ API calls should show: https://bidalbania.al/api"
echo "  ‚Ä¢ Status should be 200 (success)"
echo "  ‚Ä¢ SSL handled by Nginx"
echo "  ‚Ä¢ No mixed content errors"

echo ""
echo "‚ö†Ô∏è  Important Notes:"
echo "------------------"

echo "‚Ä¢ Development uses localhost (no SSL issues)"
echo "‚Ä¢ Production uses domain with HTTPS"
echo "‚Ä¢ CSP automatically adapts to environment"
echo "‚Ä¢ Nginx handles SSL termination in production"
echo ""
echo "‚Ä¢ For production to work:"
echo "  1. SSL certificate must be installed"
echo "  2. Nginx must be configured"
echo "  3. Backend must be running on port 7700"
echo "  4. Frontend must be running on port 8085"

echo ""
echo "üîß Quick Test Commands:"
echo "---------------------"

echo "Development:"
echo "  cd backend && npm start"
echo "  cd frontend && npm run dev"
echo "  # Visit: http://localhost:8080"
echo ""
echo "Production:"
echo "  ./deploy-nginx-ssl-fix.sh"
echo "  # Visit: https://bidalbania.al"

echo ""
echo "üéâ Domain API Configuration Complete!"
echo "===================================="
echo ""
echo "‚úÖ Development: Uses localhost (no SSL issues)"
echo "‚úÖ Production: Uses domain with HTTPS"
echo "‚úÖ CSP: Automatically adapts"
echo "‚úÖ Environment-aware configuration" 